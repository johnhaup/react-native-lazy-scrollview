name: Check for New TypeScript Errors

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - test-action

jobs:
  check-tsc-errors:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Fetch branches
        run: git fetch origin ${{ github.base_ref }}:${{ github.base_ref }} ${{ github.head_ref }}:${{ github.head_ref }}

      - name: Extract target branch name
        run: |
          branch=${{ github.base_ref }}
          branch=${branch//\//}  # This removes all slashes from the branch name
          echo "branch=${branch}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Checkout base branch
        run: git checkout ${{ github.base_ref }}

      - name: Check for tsc_output.txt in base branch
        id: check_tsc_output
        run: |
          if git show ${GITHUB_SHA}:${{ steps.extract_branch.outputs.branch }}/tsc_output.txt >/dev/null 2>&1; then
            echo "tsc_output.txt found in base branch"
            cp tsc_output.txt base-tsc-errors.txt
            echo "tsc_output_exists=true" >> $GITHUB_ENV
          else
            echo "tsc_output.txt not found in base branch"
            echo "tsc_output_exists=false" >> $GITHUB_ENV
          fi

      - name: Install dependencies for base branch
        if: env.tsc_output_exists == 'false'
        uses: ./.github/actions/setup

      - name: Generate base branch tsc output
        if: env.tsc_output_exists == 'false'
        run: |
          echo "Running tsc"
          npx tsc --noEmit --pretty false --p tsconfig.json 2> base-tsc-output.txt || true

      - name: Extract errors from base branch
        run: |
          grep -oE '^[^ ]+.ts:[0-9]+:[0-9]+' base-tsc-output.txt | sort -u > base-tsc-errors.txt || { echo 'grep command failed'; exit 1; }

      - name: Checkout PR branch
        run: git checkout ${{ github.head_ref }}

      - name: Install dependencies for PR branch
        uses: ./.github/actions/setup

      - name: Run tsc on PR branch
        run: |
          npx tsc --noEmit --pretty false --p tsconfig.json > head-tsc-output.txt || true

      - name: Extract errors from PR branch
        run: |
          grep -oE '^[^ ]+.ts:[0-9]+:[0-9]+' head-tsc-output.txt | sort -u > head-tsc-errors.txt || { echo 'grep command failed'; exit 1; }

      - name: Check both tsc outputs exist
        run: |
          if [ ! -f base-tsc-errors.txt ]; then
            echo "Base errors file not found!"
            exit 1
          fi
          if [ ! -f head-tsc-errors.txt ]; then
            echo "PR errors file not found!"
            exit 1
          fi

      - name: Print head-tsc-errors.txt for debugging
        run: |
          cat head-tsc-output.txt
          cat head-tsc-errors.txt
          cat base-tsc-output.txt
          cat base-tsc-errors.txt

      - name: Compare base errors with PR errors
        run: |
          echo "Base branch TypeScript errors:"
          cat base-tsc-errors.txt

          echo "PR branch TypeScript errors:"
          cat head-tsc-errors.txt

          new_errors=$(comm -13 base-tsc-errors.txt head-tsc-errors.txt)

          if [ -n "$new_errors" ]; then
            echo "New TypeScript errors introduced:"
            echo "$new_errors"
            exit 1
          else
            echo "No new TypeScript errors introduced."
          fi
